{"version":3,"sources":["_state/_constants/cats.constant.js","_state/_reducers/index.js","_state/_reducers/cats.reducer.js","_state/_reducers/category.reducers.js","_state/_store/index.js","_service/thecat.service.js","_state/_actions/cats.actions.js","components/category/category.jsx","components/single-cat/single-cat.jsx","components/list-cat/list-cat.jsx","views/app.jsx","serviceWorker.js","index.js"],"names":["catConstants","CATEGORY_REQUEST","CATEGORY_SUCCESS","CATEGORY_FAILURE","LIST_REQUEST","LIST_SUCCESS","LIST_FAILURE","rootReducer","combineReducers","cats","state","arguments","length","undefined","action","type","loading","newState","Object","objectSpread","data","error","category","store","createStore","applyMiddleware","thunkMiddleware","base_url","theCatService","getList","Axios","get","getCategories","catActions","dispatch","then","response","catch","err","failure","toString","getLists","Categorylist","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","id","comp","_this2","react_default","a","createElement","map","item","key","onClick","handleClick","className","name","react","Component","connect","SingleCat","src","url","alt","listcat","list","single_cat_single_cat","App","components_category_category","list_cat_list_cat","withRouter","Boolean","window","location","hostname","match","ReactDOM","render","es","react_router_dom","basename","views_app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3ceb755.chunk.js","sourcesContent":["export const catConstants = {\n  CATEGORY_REQUEST: \"CATEGORY_REQUEST\",\n  CATEGORY_SUCCESS: \"CATEGORY_SUCCESS\",\n  CATEGORY_FAILURE: \"CATEGORY_FAILURE\",\n  LIST_REQUEST: \"LIST_REQUEST\",\n  LIST_SUCCESS: \"LIST_SUCCESS\",\n  LIST_FAILURE: \"LIST_FAILURE\"\n};\n","import { combineReducers } from \"redux\";\n\nimport { cats } from \"./cats.reducer\";\nimport { category } from \"./category.reducers\";\n\nconst rootReducer = combineReducers({\n  cats,\n  category\n});\n\nexport default rootReducer;\n","import { catConstants } from \"../_constants\";\n\nexport function cats(state = {}, action) {\n  switch (action.type) {\n    case catConstants.LIST_REQUEST:\n      return {\n        loading: true\n      };\n    case catConstants.LIST_SUCCESS:\n      let newState = { ...state };\n      newState.loading = false;\n      newState.data = action.data;\n      return newState;\n    case catConstants.LIST_FAILURE:\n      return action.error;\n    default:\n      return {};\n  }\n}\n","import { catConstants } from \"../_constants\";\n\nexport function category(state = {}, action) {\n  switch (action.type) {\n    case catConstants.CATEGORY_REQUEST:\n      return {\n        loading: true\n      };\n    case catConstants.CATEGORY_SUCCESS:\n      let newState = { ...state };\n      newState.loading = false;\n      newState.data = action.data;\n      return newState;\n    case catConstants.CATEGORY_FAILURE:\n      return action.error;\n    default:\n      return { ...state };\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nimport rootReducer from \"../_reducers/index\";\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\nexport default store;\n","import Axios from \"axios\";\n\nconst base_url = \"https://api.thecatapi.com/v1\";\n\nfunction getList() {\n  return Axios.get(base_url + \"/images/search?limit=10\");\n}\n\nfunction getCategories() {\n  return Axios.get(base_url + \"/categories\");\n}\n\nexport const theCatService = {\n  getList,\n  getCategories\n};\n","import { catConstants } from \"../_constants\";\nimport { theCatService } from \"../../_service\";\n\nexport const catActions = {\n  getCategories,\n  getLists\n};\n\nfunction getCategories() {\n  return dispatch => {\n    dispatch(request());\n\n    return theCatService\n      .getCategories()\n      .then(response => {\n        dispatch(success(response.data));\n      })\n      .catch(err => {\n        dispatch(failure(err.toString()));\n      });\n  };\n\n  function request() {\n    return { type: catConstants.CATEGORY_REQUEST };\n  }\n\n  function success(data) {\n    return { type: catConstants.CATEGORY_SUCCESS, data };\n  }\n\n  function failure(err) {\n    return { type: catConstants.CATEGORY_FAILURE, err };\n  }\n}\n\nfunction getLists() {\n  return dispatch => {\n    dispatch(request());\n\n    return theCatService\n      .getList()\n      .then(response => {\n        dispatch(success(response.data));\n      })\n      .catch(err => {\n        dispatch(failure(err.toString()));\n      });\n  };\n\n  function request() {\n    return { type: catConstants.LIST_REQUEST };\n  }\n\n  function success(data) {\n    return { type: catConstants.LIST_SUCCESS, data };\n  }\n\n  function failure(err) {\n    return { type: catConstants.LIST_FAILURE, err };\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { catActions } from \"../../_state/_actions/\";\nimport \"./category.scss\";\n\nclass Categorylist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false\n    };\n  }\n  componentDidMount() {\n    console.log(\"called\");\n    const { dispatch } = this.props;\n    dispatch(catActions.getCategories());\n  }\n\n  handleClick(id) {\n    console.log(id);\n  }\n\n  render() {\n    const { category } = this.props;\n    console.log(category);\n\n    let comp;\n    if (category.loading) {\n      comp = <div>loading...</div>;\n    } else if (category.data) {\n      comp = category.data.map((item, key) => (\n        <li\n          key={item.id}\n          onClick={() => this.handleClick(item.id)}\n          className=\"c-category__item\"\n        >\n          <a>{item.name}</a>\n        </li>\n      ));\n    }\n    return (\n      <Fragment>\n        <ul className=\"c-category\">{comp}</ul>\n      </Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    category: state.category\n  };\n}\n\nexport default connect(mapStateToProps)(Categorylist);\n","import React, { Component, Fragment } from \"react\";\n\nimport \"./single-cat.scss\";\n\nclass SingleCat extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let item = this.props.data;\n    return (\n      <div className=\"c-singleCat\">\n        <img src={item.url} alt=\"\" className=\"c-singleCat__img\" />\n        <span className=\"c-singleCat__id\">{item.id}</span>\n      </div>\n    );\n  }\n}\nexport default SingleCat;\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { catActions } from \"../../_state/_actions/\";\nimport SingleCat from \"../single-cat/single-cat\";\nimport \"./list-cat.css\";\n\nclass listcat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false\n    };\n  }\n  componentDidMount() {\n    console.log(\"called\");\n    const { dispatch } = this.props;\n    dispatch(catActions.getLists());\n  }\n\n  handleClick(id) {\n    console.log(id);\n  }\n\n  render() {\n    const { list } = this.props;\n    console.log(list);\n\n    let comp;\n    if (list.loading) {\n      comp = <div>loading...</div>;\n    } else if (list.data) {\n      comp = \"not loading\";\n\n      comp = list.data.map((item, key) => (\n        <div key={item.id} className=\"l-4\">\n          <SingleCat data={item} />\n        </div>\n      ));\n    }\n    return <div className=\"c-list\">{comp}</div>;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    list: state.cats\n  };\n}\n\nexport default connect(mapStateToProps)(listcat);\n","import React, { Component, Fragment } from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CategoryList from \"../components/category/category\";\nimport Listcat from \"../components/list-cat/list-cat\";\nimport \"./app.css\";\n\nclass App extends Component {\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"l-sidebar\">\n          <CategoryList />\n        </div>\n        <div className=\"l-main\">\n          <Listcat />\n        </div>\n      </div>\n    );\n  }\n}\n// export default App;\nfunction mapStateToProps(state) {\n  return {};\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport store from \"./_state/_store\";\nimport App from \"./views/app.jsx\";\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename=\"/\">\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}